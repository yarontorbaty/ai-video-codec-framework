#!/usr/bin/env python3
"""Test GitHub push - modify existing file and push"""
import sys
import os
from datetime import datetime
sys.path.insert(0, '/home/ec2-user/ai-video-codec')

from src.agents.github_integration import GitHubIntegration

print("="*60)
print("Testing GitHub Push")
print("="*60)

gh = GitHubIntegration()

# First, let's pull any changes from GitHub
print("\n1. Pulling latest changes...")
gh.initialize_repo()

# Create/modify a tracked file
evolved_codec_file = "src/agents/evolved_codec.py"
evolved_codec_path = os.path.join(gh.repo_path, evolved_codec_file)
os.makedirs(os.path.dirname(evolved_codec_path), exist_ok=True)

timestamp = datetime.utcnow().isoformat()
with open(evolved_codec_path, "w") as f:
    f.write(f"# Evolved Codec - Test Version\n")
    f.write(f"# Auto-generated by LLM Autonomous System\n")
    f.write(f"# Timestamp: {timestamp}\n")
    f.write(f"# This is a test of the GitHub integration\n\n")
    f.write(f"def compress_frame(frame):\n")
    f.write(f"    \"\"\"Test compression function\"\"\"\n")
    f.write(f"    return frame  # TODO: implement\n")

print(f"✅ Created/modified: {evolved_codec_file}")

# Commit the change
print("\n2. Creating commit...")
success, commit_hash = gh.commit_code_evolution(
    version=1,
    files_changed=[evolved_codec_file],
    metrics={"bitrate_mbps": 1.8, "compression_ratio": 4.2},
    description="Test commit - verifying GitHub integration works"
)

if success:
    print(f"✅ Commit successful: {commit_hash[:8] if commit_hash else 'created'}")
    
    # Push to GitHub
    print("\n3. Pushing to GitHub (branch: master)...")
    push_success, push_error = gh.push_changes(branch='master')
    
    if push_success:
        print("\n" + "="*60)
        print("✅ SUCCESS! Code pushed to GitHub!")
        print("="*60)
        print(f"\nCheck your repository:")
        print(f"  https://github.com/yarontorbaty/ai-video-codec-framework")
        print(f"\nCommit: {commit_hash[:8] if commit_hash else 'N/A'}")
        print(f"File: {evolved_codec_file}")
    else:
        print(f"\n❌ Push failed: {push_error}")
else:
    print("❌ Commit failed")

