# AI Video Codec Framework - AWS Configuration Template
# Copy this file to aws_config.yaml and fill in your values
# DO NOT commit aws_config.yaml to git!

# AWS Account Configuration
aws:
  region: us-east-1  # Change to your preferred region
  account_id: "YOUR_ACCOUNT_ID"  # Your AWS account ID
  
# Project Configuration
project:
  name: ai-video-codec
  environment: production
  version: "0.1.0"
  
# Infrastructure Configuration
infrastructure:
  # Orchestrator (Master Controller)
  orchestrator:
    instance_type: c6i.xlarge
    ami_id: "ami-0c02fb55956c7d316"  # Amazon Linux 2 AMI (update as needed)
    key_pair: "YOUR_KEY_PAIR_NAME"  # Your EC2 key pair name
    security_group: "ai-video-codec-orchestrator-sg"
    
  # Training Workers (Auto Scaling Group)
  training_workers:
    instance_type: g5.4xlarge
    ami_id: "ami-0c02fb55956c7d316"  # Amazon Linux 2 with GPU support
    min_size: 0
    max_size: 4
    desired_capacity: 2
    use_spot: true  # Use spot instances for cost savings
    
  # Inference Workers
  inference_workers:
    instance_type: g4dn.xlarge
    ami_id: "ami-0c02fb55956c7d316"
    min_size: 0
    max_size: 4
    desired_capacity: 1
    use_spot: false
    
  # Evaluation Workers
  evaluation_workers:
    instance_type: c6i.2xlarge
    ami_id: "ami-0c02fb55956c7d316"
    min_size: 0
    max_size: 2
    desired_capacity: 1
    use_spot: false

# Storage Configuration
storage:
  # S3 Buckets
  s3:
    artifacts_bucket: "ai-video-codec-artifacts-{account_id}"
    videos_bucket: "ai-video-codec-videos-{account_id}"
    models_bucket: "ai-video-codec-models-{account_id}"
    reports_bucket: "ai-video-codec-reports-{account_id}"
    
  # EFS (Elastic File System)
  efs:
    performance_mode: generalPurpose
    throughput_mode: provisioned
    provisioned_throughput: 100  # MB/s
    
  # DynamoDB Tables
  dynamodb:
    experiments_table: "ai-video-codec-experiments"
    metrics_table: "ai-video-codec-metrics"
    cost_tracking_table: "ai-video-codec-cost-tracking"

# Networking Configuration
networking:
  vpc:
    cidr: "10.0.0.0/16"
    enable_dns_hostnames: true
    enable_dns_support: true
    
  subnets:
    public:
      - cidr: "10.0.1.0/24"
        az: "us-east-1a"
      - cidr: "10.0.2.0/24"
        az: "us-east-1b"
    private:
      - cidr: "10.0.10.0/24"
        az: "us-east-1a"
      - cidr: "10.0.20.0/24"
        az: "us-east-1b"

# Cost Management
cost_management:
  budget_limit: 5000  # USD per month
  alert_thresholds:
    - percentage: 70
      action: "scale_down"
    - percentage: 85
      action: "emergency_stop"
    - percentage: 95
      action: "shutdown_all"
      
  # Spot instance configuration
  spot:
    max_price_percentage: 80  # Max 80% of on-demand price
    interruption_behavior: "terminate"
    
# Monitoring Configuration
monitoring:
  cloudwatch:
    log_retention_days: 30
    metrics_retention_days: 14
    
  # SNS Topics for alerts
  sns:
    cost_alerts: "ai-video-codec-cost-alerts"
    system_alerts: "ai-video-codec-system-alerts"
    
# Security Configuration
security:
  # IAM Roles (will be created by CloudFormation)
  roles:
    orchestrator_role: "ai-video-codec-orchestrator-role"
    worker_role: "ai-video-codec-worker-role"
    
  # Security Groups
  security_groups:
    orchestrator: "ai-video-codec-orchestrator-sg"
    workers: "ai-video-codec-workers-sg"
    
  # Encryption
  encryption:
    s3_kms_key: "ai-video-codec-s3-key"
    efs_kms_key: "ai-video-codec-efs-key"

# Application Configuration
application:
  # Orchestrator settings
  orchestrator:
    experiment_interval: 60  # seconds
    report_interval: 3600  # 1 hour
    max_concurrent_experiments: 4
    
  # Training settings
  training:
    max_training_time: 7200  # 2 hours per experiment
    checkpoint_interval: 300  # 5 minutes
    max_epochs: 100
    
  # Evaluation settings
  evaluation:
    metrics:
      - psnr
      - ssim
      - vmaf
      - lpips
    performance_metrics:
      - fps
      - latency
      - memory_usage
      
# Environment Variables (will be set by deployment script)
environment:
  PYTHONPATH: "/opt/ai-video-codec"
  AWS_DEFAULT_REGION: "{region}"
  LOG_LEVEL: "INFO"
  ENVIRONMENT: "production"
