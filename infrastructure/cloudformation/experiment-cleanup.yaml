AWSTemplateFormatVersion: '2010-09-09'
Description: 'Experiment Cleanup Lambda - Runs every 5 minutes to close out stuck experiments'

Resources:
  # Lambda Execution Role
  ExperimentCleanupRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: experiment-cleanup-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                Resource:
                  - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ai-video-codec-experiments'

  # Lambda Function
  ExperimentCleanupFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ai-video-codec-experiment-cleanup
      Runtime: python3.9
      Handler: experiment_cleanup.handler
      Role: !GetAtt ExperimentCleanupRole.Arn
      Timeout: 60
      MemorySize: 256
      Code:
        ZipFile: |
          # Placeholder - will be updated via AWS CLI
          def handler(event, context):
              return {'statusCode': 200, 'body': 'Placeholder'}
      Environment:
        Variables:
          EXPERIMENTS_TABLE: ai-video-codec-experiments

  # CloudWatch Events Rule (trigger every 5 minutes)
  CleanupScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      Name: experiment-cleanup-schedule
      Description: 'Trigger experiment cleanup every 5 minutes'
      ScheduleExpression: 'rate(5 minutes)'
      State: ENABLED
      Targets:
        - Arn: !GetAtt ExperimentCleanupFunction.Arn
          Id: ExperimentCleanupTarget

  # Permission for CloudWatch Events to invoke Lambda
  CleanupInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ExperimentCleanupFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CleanupScheduleRule.Arn

  # CloudWatch Log Group
  CleanupLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ExperimentCleanupFunction}'
      RetentionInDays: 7

Outputs:
  CleanupFunctionArn:
    Description: 'ARN of the cleanup Lambda function'
    Value: !GetAtt ExperimentCleanupFunction.Arn
    Export:
      Name: experiment-cleanup-function-arn

  CleanupScheduleRule:
    Description: 'CloudWatch Events rule for cleanup schedule'
    Value: !Ref CleanupScheduleRule
    Export:
      Name: experiment-cleanup-schedule-rule

